{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoni\\\\OneDrive\\\\Documents\\\\GitHub\\\\322\\\\New folder\\\\CPTS322\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport geminiApiService from '../services/geminiApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface({\n  onSaveConversation\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSend = async () => {\n    if (!userInput.trim()) return;\n    const userMsg = {\n      sender: 'user',\n      text: userInput\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setUserInput('');\n    setError(null);\n    setIsLoading(true);\n    try {\n      const aiReply = await geminiApiService.getChatResponse(userInput);\n      const botMsg = {\n        sender: 'bot',\n        text: aiReply\n      };\n      setMessages(prev => [...prev, botMsg]);\n    } catch (err) {\n      console.error('AI Service Error:', err);\n      setError('AI service is unavailable. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Save conversation (logs) to your Flask back-end\n  const handleSave = async () => {\n    if (!messages.length) return;\n    try {\n      // Make a POST request to a Flask endpoint\n      const response = await fetch('/save_conversation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save conversation');\n      }\n\n      // Optionally parse the response JSON\n      const data = await response.json();\n      console.log('Conversation saved:', data);\n\n      // You could show a success alert or message\n      alert('Conversation saved successfully!');\n    } catch (err) {\n      console.error('Error saving conversation:', err);\n      setError('Failed to save conversation. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with TravelBuddy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        maxHeight: '200px',\n        overflowY: 'auto'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"3\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          handleSend();\n        }\n      },\n      placeholder: \"Ask for travel suggestions...\",\n      style: {\n        width: '100%',\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: isLoading,\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        style: {\n          marginLeft: '10px'\n        },\n        disabled: !messages.length,\n        children: \"Save Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"+phEnpaG/jGYXGIOLAUKkz81/Qs=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","geminiApiService","jsxDEV","_jsxDEV","ChatInterface","onSaveConversation","_s","messages","setMessages","userInput","setUserInput","error","setError","isLoading","setIsLoading","handleSend","trim","userMsg","sender","text","prev","aiReply","getChatResponse","botMsg","err","console","handleSave","length","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","log","alert","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","border","padding","maxHeight","overflowY","map","msg","index","margin","color","rows","value","onChange","e","target","onKeyDown","key","preventDefault","placeholder","width","onClick","disabled","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Phoni/OneDrive/Documents/GitHub/322/New folder/CPTS322/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport geminiApiService from '../services/geminiApiService';\r\n\r\nfunction ChatInterface({ onSaveConversation }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\nconst handleSend = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    const userMsg = { sender: 'user', text: userInput };\r\n    setMessages((prev) => [...prev, userMsg]);\r\n    setUserInput('');\r\n    setError(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const aiReply = await geminiApiService.getChatResponse(userInput);\r\n      const botMsg = { sender: 'bot', text: aiReply };\r\n      setMessages((prev) => [...prev, botMsg]);\r\n    } catch (err) {\r\n      console.error('AI Service Error:', err);\r\n      setError('AI service is unavailable. Please try again later.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save conversation (logs) to your Flask back-end\r\n  const handleSave = async () => {\r\n    if (!messages.length) return;\r\n\r\n    try {\r\n      // Make a POST request to a Flask endpoint\r\n      const response = await fetch('/save_conversation', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ messages })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save conversation');\r\n      }\r\n\r\n      // Optionally parse the response JSON\r\n      const data = await response.json();\r\n      console.log('Conversation saved:', data);\r\n\r\n      // You could show a success alert or message\r\n      alert('Conversation saved successfully!');\r\n    } catch (err) {\r\n      console.error('Error saving conversation:', err);\r\n      setError('Failed to save conversation. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <h2>Chat with TravelBuddy</h2>\r\n\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', maxHeight: '200px', overflowY: 'auto' }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ margin: '5px 0' }}>\r\n            <strong>{msg.sender === 'user' ? 'You' : 'Bot'}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <textarea\r\n        rows=\"3\"\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            handleSend();\r\n          }\r\n        }}\r\n        placeholder=\"Ask for travel suggestions...\"\r\n        style={{ width: '100%', marginTop: '10px' }}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <button onClick={handleSend} disabled={isLoading}>\r\n          {isLoading ? 'Sending...' : 'Send'}\r\n        </button>\r\n        <button onClick={handleSave} style={{ marginLeft: '10px' }} disabled={!messages.length}>\r\n          Save Conversation\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}