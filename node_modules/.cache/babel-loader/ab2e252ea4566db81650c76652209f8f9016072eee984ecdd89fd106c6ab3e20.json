{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoni\\\\OneDrive\\\\Documents\\\\GitHub\\\\322\\\\New folder\\\\CPTS322\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\n// import geminiApiService from '../services/geminiApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface({\n  onSaveConversation\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const endRef = useRef(null);\n\n  // Auto-scroll to latest message\n  useEffect(() => {\n    var _endRef$current;\n    (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSend = async () => {\n    if (!userInput.trim()) return;\n    setError('');\n    setIsLoading(true);\n    setMessages(msgs => [...msgs, {\n      sender: 'user',\n      text: userInput\n    }]);\n    const input = userInput;\n    setUserInput('');\n    try {\n      const replyText = await geminiApiService.getChatResponse(input);\n      setMessages(msgs => [...msgs, {\n        sender: 'bot',\n        text: replyText\n      }]);\n    } catch (err) {\n      console.error(err);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSave = async () => {\n    if (!messages.length) return;\n    try {\n      const res = await fetch('/save_conversation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages\n        })\n      });\n      if (!res.ok) throw new Error('Failed to save conversation');\n      await res.json();\n      alert('Conversation saved!');\n      onSaveConversation === null || onSaveConversation === void 0 ? void 0 : onSaveConversation(messages);\n    } catch (err) {\n      console.error(err);\n      setError('Save failed: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TravelBuddy Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '300px',\n        overflowY: 'auto'\n      },\n      children: [messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [m.sender === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), \" \", m.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 3,\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      onKeyDown: e => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n          e.preventDefault();\n          handleSend();\n        }\n      },\n      placeholder: \"Type a message...\",\n      style: {\n        width: '100%',\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: isLoading,\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        disabled: !messages.length,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"60PTrDBRsP2bt4nz2oLkUi7qnSI=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatInterface","onSaveConversation","_s","messages","setMessages","userInput","setUserInput","error","setError","isLoading","setIsLoading","endRef","_endRef$current","current","scrollIntoView","behavior","handleSend","trim","msgs","sender","text","input","replyText","geminiApiService","getChatResponse","err","console","message","handleSave","length","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","alert","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","border","padding","height","overflowY","map","m","i","ref","color","rows","value","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","placeholder","width","marginTop","onClick","disabled","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Phoni/OneDrive/Documents/GitHub/322/New folder/CPTS322/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n// import geminiApiService from '../services/geminiApiService';\r\n\r\nfunction ChatInterface({ onSaveConversation }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const endRef = useRef(null);\r\n\r\n  // Auto-scroll to latest message\r\n  useEffect(() => {\r\n    endRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSend = async () => {\r\n    if (!userInput.trim()) return;\r\n    setError('');\r\n    setIsLoading(true);\r\n    setMessages(msgs => [...msgs, { sender: 'user', text: userInput }]);\r\n    const input = userInput;\r\n    setUserInput('');\r\n\r\n    try {\r\n      const replyText = await geminiApiService.getChatResponse(input);\r\n      setMessages(msgs => [...msgs, { sender: 'bot', text: replyText }]);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!messages.length) return;\r\n    try {\r\n      const res = await fetch('/save_conversation', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ messages })\r\n      });\r\n      if (!res.ok) throw new Error('Failed to save conversation');\r\n      await res.json();\r\n      alert('Conversation saved!');\r\n      onSaveConversation?.(messages);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Save failed: ' + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '20px' }}>\r\n      <h2>TravelBuddy Chat</h2>\r\n      <div style={{\r\n        border: '1px solid #ccc',\r\n        padding: '10px',\r\n        height: '300px',\r\n        overflowY: 'auto'\r\n      }}>\r\n        {messages.map((m, i) => (\r\n          <div key={i} style={{ margin: '5px 0' }}>\r\n            <strong>{m.sender === 'user' ? 'You' : 'Bot'}:</strong> {m.text}\r\n          </div>\r\n        ))}\r\n        <div ref={endRef} />\r\n      </div>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <textarea\r\n        rows={3}\r\n        value={userInput}\r\n        onChange={e => setUserInput(e.target.value)}\r\n        onKeyDown={e => {\r\n          if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSend();\r\n          }\r\n        }}\r\n        placeholder=\"Type a message...\"\r\n        style={{ width: '100%', marginTop: '10px' }}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <button onClick={handleSend} disabled={isLoading}>\r\n          {isLoading ? 'Sending...' : 'Send'}\r\n        </button>\r\n        <button\r\n          onClick={handleSave}\r\n          disabled={!messages.length}\r\n          style={{ marginLeft: '10px' }}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}